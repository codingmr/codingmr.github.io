{"version":3,"sources":["media/net_graph.png","pages/Landing.js","pages/About.js","pages/Projects.js","pages/Contact.js","pages/Footer.js","components/NavigationControl.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Landing","id","href","target","className","outline","color","React","Component","About","src","net_graph","alt","Projects","Contact","props","submitForm","bind","state","status","this","onSubmit","action","method","for","type","placeholder","name","ev","preventDefault","form","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","Footer","NavigationControl","listenToScroll","winScroll","document","body","scrollTop","documentElement","height","scrollHeight","clientHeight","scrolled","Math","round","isVisible","theposition","toggle","isOpen","scroller","scrollTo","duration","delay","smooth","window","addEventListener","removeEventListener","dark","expand","fixed","onClick","gotoTop","navbar","gotoAbout","gotoProjects","gotoContact","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","getElementById","URL","process","origin","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7e061f22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/net_graph.4e147721.png\";","import React from 'react';\r\nimport { Button,\r\n         ButtonGroup,\r\n} from 'reactstrap';\r\n\r\nimport './styles/landing-default.css';\r\n\r\nimport { Element } from 'react-scroll'\r\n\r\nexport default class Landing extends React.Component {\r\n    render() {\r\n        return (\r\n          <Element id=\"landing-view\">\r\n            <div id=\"align-center\">\r\n              <h1 id=\"title\">Matt Roberts</h1>\r\n              <h2 id=\"subtitle\">Software Engineer</h2>\r\n              <div id=\"welcome-info-body\">\r\n                <hr id=\"line-breaker\" />\r\n                <p id=\"welcome-info-text\">Welcome to my portfolio, here you will find the various projects I'm undertaking\r\n                and my 'works of glory'. Feel free to connect with me via the social networks below.\r\n                </p>\r\n              </div>\r\n\r\n              <ButtonGroup id=\"social-but-links\" >\r\n                <Button id=\"connect-button\" href=\"https://github.com/codingmr\" target=\"_blank\" className=\"btn-gogo\" outline color=\"info\">GitHub</Button>\r\n\r\n                <Button id=\"connect-button\" href=\"https://stackoverflow.com/users/2189042/matt-roberts\" target=\"_blank\" className=\"btn-gogo\" outline color=\"info\">Stackoverflow</Button>\r\n                <Button id=\"connect-button\" href=\"https://www.linkedin.com/in/matt-roberts-8aa85875/\" target=\"_blank\" className=\"btn-gogo\" outline color=\"info\">LinkedIn</Button>\r\n              </ButtonGroup>\r\n\r\n            </div>\r\n        </Element>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport net_graph from '../media/net_graph.png';\r\n\r\nimport './styles/about-default.css';\r\n\r\nimport { Element } from 'react-scroll'\r\n\r\nexport default class About extends React.Component {\r\n    render() {\r\n        return (\r\n            <Element id=\"about-view\">\r\n              <div id=\"about-body\">\r\n                <div id=\"section-body\">\r\n                    <div id=\"img-body\">\r\n                      <img id=\"img\" src={net_graph} alt=\"Node Network\" />\r\n                    </div>\r\n                    <div id=\"section-text\">\r\n                      <h2 id=\"section-title\">About me</h2>\r\n                      <p>\r\n                          I'm super interested in how things work, function, operate and most of all how\r\n                          actions can be automated. The projects that I've worked on so far have been\r\n                          ideal for learning the different stages throughout a life cycle of a project.\r\n                          One of my favourite technologies that give fast results is React, infact this\r\n                          website was built with it!\r\n                      </p>\r\n\r\n                      <p>\r\n                          When I'm not spending my time hitting buttons (writing code) I enjoy exploring beautiful places, getting mind deep into a sci-fi film,\r\n                          or poised in some strange position, <i>luckily other people do it too and call it yoga.</i>\r\n                      </p>\r\n\r\n                      <p>\r\n                          Some technologies I'm familiar with are: <b>MySQL</b>, <b>React</b>, <b>Java</b> and <b>Python</b>\r\n                      </p>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </Element>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Card,\r\n         Button,\r\n         CardHeader,\r\n         CardFooter,\r\n         CardBody,\r\n         CardTitle,\r\n         CardText\r\n} from 'reactstrap';\r\n\r\nimport './styles/projects-default.css';\r\n\r\nimport { Element } from 'react-scroll'\r\n\r\nexport default class Projects extends React.Component {\r\n    render() {\r\n        return (\r\n            <Element id=\"projects-view\">\r\n              <div id=\"projects-body\">\r\n                <Card id=\"card-body\">\r\n                  <CardHeader>Media Review</CardHeader>\r\n                  <CardBody>\r\n                    <CardTitle>Java</CardTitle>\r\n                    <CardText id=\"card-text\">A simple console program to save, view and edit media items stored in the system.</CardText>\r\n                    <div id=\"card-button-body\">\r\n                      <Button id=\"java-button\" outline href=\"https://github.com/codingmr/Media-Review\">Source code</Button>\r\n                    </div>\r\n                  </CardBody>\r\n                  <CardFooter></CardFooter>\r\n                </Card>\r\n\r\n                <Card id=\"card-body\">\r\n                  <CardHeader>Procrastinotion</CardHeader>\r\n                  <CardBody>\r\n                    <CardTitle>JavaScript</CardTitle>\r\n                    <CardText id=\"card-text\">A chrome extention project. It monitors a users browsing habits and prompts after a period of using social media.</CardText>\r\n                    <div id=\"card-button-body\">\r\n                      <Button id=\"javascript-button\" outline href=\"https://github.com/Apachean/procrastinotion\">Source Code</Button>\r\n                    </div>\r\n                  </CardBody>\r\n                  <CardFooter className=\"text-muted\"></CardFooter>\r\n                </Card>\r\n\r\n                <Card id=\"card-body\">\r\n                  <CardHeader>A collection of scripts</CardHeader>\r\n                  <CardBody>\r\n                    <CardTitle>Python</CardTitle>\r\n                    <CardText id=\"card-text\">Preprocessing data for machine learning algorithms and execution of machine learning algorithms.</CardText>\r\n                    <div id=\"card-button-body\">\r\n                      <Button id=\"python-button\" outline href=\"https://github.com/codingmr/Dissertation-projectcode\">Source code</Button>\r\n                    </div>\r\n                  </CardBody>\r\n                  <CardFooter className=\"text-muted\"></CardFooter>\r\n                </Card>\r\n\r\n              </div>\r\n            </Element>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Button,\r\n         Form,\r\n         FormGroup,\r\n         Label,\r\n         Input\r\n} from 'reactstrap';\r\n\r\nimport { Element } from 'react-scroll'\r\n\r\nimport './styles/contact-default.css';\r\n\r\n\r\nexport default class Contact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.state = {\r\n      status: \"\"\r\n    };\r\n  }\r\n\r\n    render() {\r\n      const { status } = this.state;\r\n        return (\r\n            <Element id=\"contact-view\">\r\n              <div id=\"contact-body\">\r\n                <Form\r\n                  id=\"contact-form\"\r\n                  onSubmit={this.submitForm}\r\n                  action=\"https://formspree.io/mgelwver\"\r\n                  method=\"POST\"\r\n                  >\r\n\r\n                  <FormGroup id=\"contact-email\">\r\n                    <Label for=\"exampleEmail\">Email:</Label>\r\n                    <Input type=\"email\" placeholder=\"example@gmail.com\" id=\"exampleEmail\" name=\"email\" />\r\n                  </FormGroup>\r\n                  <FormGroup id=\"contact-message\">\r\n                    <Label for=\"exampleText\">Message:</Label>\r\n                    <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\r\n                  </FormGroup>\r\n                  <FormGroup id=\"contact-submit-group\">\r\n                    <p id=\"contact-response\">Error! Sending message was unsuccessful. Please contact me at codingmroberts@gmail.com</p>\r\n                    {status === \"SUCCESS\" ? <p>Thank you! Sending message was successful.</p> : <Button id=\"contact-submit\">Submit</Button>}\r\n                    {status === \"ERROR\" && <p>Error! Sending message was unsuccessful. Please contact me at codingmroberts@gmail.com</p>}\r\n                  </FormGroup>\r\n              </Form>\r\n              </div>\r\n            </Element>\r\n        );\r\n    }\r\n\r\n    submitForm(ev) {\r\n      ev.preventDefault();\r\n      const form = ev.target;\r\n      const data = new FormData(form);\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(form.method, form.action);\r\n      xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n      xhr.onreadystatechange = () => {\r\n        if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n        if (xhr.status === 200) {\r\n          form.reset();\r\n          this.setState({ status: \"SUCCESS\" });\r\n        } else {\r\n          this.setState({ status: \"ERROR\" });\r\n        }\r\n      };\r\n    xhr.send(data);\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport './styles/footer-default.css';\r\n\r\nexport default class Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"footer-view\">\r\n              <div id=\"footer-body\">\r\n                <small>© Matt Roberts 2020 All rights reserved.</small>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Button,\r\n  Badge\r\n  } from 'reactstrap';\r\n\r\n\r\nimport { scroller } from 'react-scroll'\r\nimport './styles/navigation-default.css';\r\nimport './styles/scrollbutton-default.css';\r\n\r\nimport { IoIosArrowUp } from \"react-icons/io\";\r\n\r\nexport default class NavigationControl extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false,\r\n      theposition: 0,\r\n      isVisible: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  gotoTop() {\r\n    if (this.state.isOpen) {this.setState({isOpen: false})}\r\n    scroller.scrollTo('landing-view', {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: 'easeInOutQuart'\r\n    })\r\n  }\r\n\r\n  gotoAbout() {\r\n    if (this.state.isOpen) {this.setState({isOpen: false})}\r\n    scroller.scrollTo('about-view', {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: 'easeInOutQuart'\r\n    })\r\n  }\r\n\r\n  gotoProjects() {\r\n    if (this.state.isOpen) {this.setState({isOpen: false})}\r\n    scroller.scrollTo('projects-view', {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: 'easeInOutQuart'\r\n    })\r\n  }\r\n\r\n  gotoContact() {\r\n    if (this.state.isOpen) {this.setState({isOpen: false})}\r\n    scroller.scrollTo('contact-view', {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: 'easeInOutQuart'\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.listenToScroll)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.listenToScroll)\r\n  }\r\n\r\n\r\n  listenToScroll = () => {\r\n    const winScroll =\r\n      document.body.scrollTop || document.documentElement.scrollTop\r\n\r\n    const height =\r\n      document.documentElement.scrollHeight -\r\n      document.documentElement.clientHeight\r\n\r\n    const scrolled = Math.round((winScroll / height) * 100)\r\n\r\n    if (scrolled>20){\r\n      this.setState({isVisible: true})\r\n\r\n      if (scrolled>\"97\"){\r\n        this.setState({\r\n          theposition: \"Top\",\r\n        })\r\n      }\r\n      else {\r\n        this.setState({\r\n          theposition: scrolled+\"%\",\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      this.setState({isVisible: false})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      {\r\n        this.state.isVisible ?\r\n        <Navbar color=\"none\" dark expand=\"md\" fixed={`top`} id=\"navbar-hidden\">\r\n          <NavbarBrand id=\"brand\" onClick={() => this.gotoTop()}><b>coding</b>mroberts</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem id=\"nav-item\">\r\n                <Button id=\"nav-button\" color=\"link\"onClick={() => this.gotoAbout()}>About</Button>\r\n              </NavItem>\r\n              <NavItem id=\"nav-item\">\r\n                <Button id=\"nav-button\" color=\"link\"onClick={() => this.gotoProjects()}>Projects</Button>\r\n              </NavItem>\r\n              <NavItem id=\"nav-item\">\r\n                <Button id=\"nav-button\" color=\"link\"onClick={() => this.gotoContact()}>Contact</Button>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n        :\r\n        <Navbar color=\"none\" dark expand=\"md\" fixed={`top`} id=\"navbar-visible\">\r\n          <NavbarBrand id=\"brand\" onClick={() => this.gotoTop()}><b>coding</b>mroberts</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem id=\"nav-item\">\r\n                <Button id=\"nav-button\" color=\"link\"onClick={() => this.gotoAbout()}>About</Button>\r\n              </NavItem>\r\n              <NavItem id=\"nav-item\">\r\n                <Button id=\"nav-button\" color=\"link\"onClick={() => this.gotoProjects()}>Projects</Button>\r\n              </NavItem>\r\n              <NavItem id=\"nav-item\">\r\n                <Button id=\"nav-button\" color=\"link\"onClick={() => this.gotoContact()}>Contact</Button>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      }\r\n\r\n        <div id=\"scroll-button-body\">\r\n        {\r\n              this.state.isVisible ?\r\n              <Button id=\"scroll-button-visible\" onClick={()=>this.gotoTop()}>\r\n                <div><IoIosArrowUp /></div>\r\n                <Badge id=\"scroll-percentage\" color=\"secondary\">{this.state.theposition}</Badge>\r\n              </Button>\r\n              :\r\n              <Button id=\"scroll-button-hidden\">\r\n                <div><IoIosArrowUp /></div>\r\n                <Badge id=\"scroll-percentage\" color=\"secondary\">{this.state.theposition}</Badge>\r\n              </Button>\r\n        }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Landing from './pages/Landing';\r\nimport About from './pages/About';\r\nimport Projects from './pages/Projects';\r\nimport Contact from './pages/Contact';\r\nimport Footer from './pages/Footer';\r\n\r\n\r\nimport NavigationControl from './components/NavigationControl'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"App\">\r\n        <header>\r\n          <NavigationControl/>\r\n        </header>\r\n        <Landing/>\r\n        <About/>\r\n        <Projects/>\r\n        <Contact/>\r\n        <footer>\r\n          <Footer/>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}